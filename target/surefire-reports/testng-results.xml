<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="1" total="3" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Regression Suite" duration-ms="55194" started-at="2022-02-19T13:28:49 EST" finished-at="2022-02-19T13:29:44 EST">
    <groups>
    </groups>
    <test name="login_tests" duration-ms="55194" started-at="2022-02-19T13:28:49 EST" finished-at="2022-02-19T13:29:44 EST">
      <class name="automationpractise.tests.registrationtests.RegistrationTests">
        <test-method status="PASS" signature="setUp()[pri:0, instance:automationpractise.tests.registrationtests.RegistrationTests@67205a84]" name="setUp" is-config="true" duration-ms="11934" started-at="2022-02-19T13:28:49 EST" finished-at="2022-02-19T13:29:01 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="validateRegistrationPositiveFlow()[pri:0, instance:automationpractise.tests.registrationtests.RegistrationTests@67205a84]" name="validateRegistrationPositiveFlow" duration-ms="38406" started-at="2022-02-19T13:29:01 EST" finished-at="2022-02-19T13:29:39 EST">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#email_create"}
  (Session info: chrome=97.0.4692.99)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'SACHDEVATZBK15U', ip: '192.168.0.63', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 97.0.4692.99, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\TARUN~1.SAC\AppDat...}, goog:chromeOptions: {debuggerAddress: localhost:49459}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 155c60381f4925b4c7d44def9a443e27
*** Element info: {Using=id, value=email_create}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#email_create"}
  (Session info: chrome=97.0.4692.99)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'SACHDEVATZBK15U', ip: '192.168.0.63', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 97.0.4692.99, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\TARUN~1.SAC\AppDat...}, goog:chromeOptions: {debuggerAddress: localhost:49459}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 155c60381f4925b4c7d44def9a443e27
*** Element info: {Using=id, value=email_create}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy10.sendKeys(Unknown Source)
at com.automationpractise.pages.LandingPage.navigateToRegistration(LandingPage.java:43)
at automationpractise.tests.registrationtests.RegistrationTests.validateRegistrationPositiveFlow(RegistrationTests.java:22)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRegistrationPositiveFlow -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:automationpractise.tests.registrationtests.RegistrationTests@67205a84]" name="tearDown" is-config="true" duration-ms="4727" started-at="2022-02-19T13:29:39 EST" finished-at="2022-02-19T13:29:44 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRegistrationPositiveFlow status=FAILURE method=RegistrationTests.validateRegistrationPositiveFlow()[pri:0, instance:automationpractise.tests.registrationtests.RegistrationTests@67205a84] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automationpractise.tests.registrationtests.RegistrationTests -->
      <class name="automationpractise.tests.logintests.LoginTests">
        <test-method status="PASS" signature="initializeEnvironment()[pri:0, instance:automationpractise.tests.logintests.LoginTests@7494e528]" name="initializeEnvironment" is-config="true" duration-ms="52" started-at="2022-02-19T13:28:49 EST" finished-at="2022-02-19T13:28:49 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeEnvironment -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:automationpractise.tests.logintests.LoginTests@7494e528]" name="setUp" is-config="true" duration-ms="11454" started-at="2022-02-19T13:28:49 EST" finished-at="2022-02-19T13:29:00 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="validateLoginPositiveFlow(java.lang.String,java.lang.String)[pri:0, instance:automationpractise.tests.logintests.LoginTests@7494e528]" name="validateLoginPositiveFlow" duration-ms="32066" started-at="2022-02-19T13:29:00 EST" data-provider="JsonDataProvider" finished-at="2022-02-19T13:29:32 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[hey@abc.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Testing@1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginPositiveFlow -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:automationpractise.tests.logintests.LoginTests@7494e528]" name="tearDown" is-config="true" duration-ms="2256" started-at="2022-02-19T13:29:32 EST" finished-at="2022-02-19T13:29:35 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLoginPositiveFlow status=SUCCESS method=LoginTests.validateLoginPositiveFlow(java.lang.String,java.lang.String)[pri:0, instance:automationpractise.tests.logintests.LoginTests@7494e528] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automationpractise.tests.logintests.LoginTests -->
    </test> <!-- login_tests -->
  </suite> <!-- Regression Suite -->
</testng-results>
